{"version":3,"sources":["Buildings.js","ClickArea.svg","data.js","Upgrades.js","Prestige.js","App.js","reportWebVitals.js","index.js"],"names":["Buildings","items","currency","buyBuilding","map","item","name","amount","cost","id","className","onClick","toFixed","disabled","upgrades","upgrade_name","building_to_upgrade","value","buildings","per_second","Upgrades","upgradeBuilding","style","border","marginBottom","Prestige","prestige","App","useState","setCurrency","setPerSecond","per_click","setPerClick","prestige_power","setPrestigePower","amount_to_prestige","setAmountToPrestige","about_to_prestige","setAboutToPrestige","building_array","setBuildingArray","upgrades_array","setUpgradesArray","useEffect","data","JSON","parse","localStorage","getItem","getLocalStorage","per_s","reduce","acc","cur","updatePerSecond","game_data","setItem","stringify","saveData","interval","setInterval","prev","clearInterval","src","svg","alt","building","updatedAmount","updatedCost","updatedPerSecond","updatedUpgradesArray","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8c954d6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Buildings = ({ items, currency, buyBuilding }) => {\r\n  return (\r\n    <>\r\n      {items.map((item) => {\r\n        const { name, amount, cost, id } = item;\r\n        return (\r\n          <div className=\"building\" key={id}>\r\n            <p className=\"b_name\">{name}</p>\r\n            <span className=\"b_amount\">{amount}</span>\r\n            {currency >= cost ? (\r\n              <button className=\"b_buy\" onClick={() => buyBuilding(id, cost)}>\r\n                Buy cost : {cost && cost.toFixed(2)}\r\n              </button>\r\n            ) : (\r\n              <button className=\"b_buy\" disabled>\r\n                Buy cost : {cost && cost.toFixed(2)}\r\n              </button>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Buildings;\r\n","export default __webpack_public_path__ + \"static/media/ClickArea.3bc0e2d3.svg\";","export const upgrades = [\r\n  {\r\n    upgrade_name: \"Building 1 Efficiency X 2\",\r\n    cost: 50,\r\n    id: 1,\r\n    building_to_upgrade: \"Building 1\",\r\n    value: 2,\r\n  },\r\n  {\r\n    upgrade_name: \"Building 2 Efficiency X 2\",\r\n    cost: 100,\r\n    id: 2,\r\n    building_to_upgrade: \"Building 2\",\r\n    value: 2,\r\n  },\r\n  {\r\n    upgrade_name: \"Building 3 Efficiency X 2\",\r\n    cost: 200,\r\n    id: 3,\r\n    building_to_upgrade: \"Building 3\",\r\n    value: 2,\r\n  },\r\n  {\r\n    upgrade_name: \"Building 4 Efficiency X 2\",\r\n    cost: 400,\r\n    id: 4,\r\n    building_to_upgrade: \"Building 4\",\r\n    value: 2,\r\n  },\r\n  {\r\n    upgrade_name: \"Building 5 Efficiency X 2\",\r\n    cost: 800,\r\n    id: 5,\r\n    building_to_upgrade: \"Building 5\",\r\n    value: 2,\r\n  },\r\n  {\r\n    upgrade_name: \"Building 6 Efficiency X 2\",\r\n    cost: 1600,\r\n    id: 6,\r\n    building_to_upgrade: \"Building 6\",\r\n    value: 2,\r\n  },\r\n];\r\nexport const buildings = [\r\n  { name: \"Building 1\", amount: 0, cost: 10, per_second: 0.2, id: 1 },\r\n  { name: \"Building 2\", amount: 0, cost: 20, per_second: 0.4, id: 2 },\r\n  { name: \"Building 3\", amount: 0, cost: 40, per_second: 0.8, id: 3 },\r\n  { name: \"Building 4\", amount: 0, cost: 80, per_second: 1.6, id: 4 },\r\n  { name: \"Building 5\", amount: 0, cost: 160, per_second: 3.2, id: 5 },\r\n  { name: \"Building 6\", amount: 0, cost: 320, per_second: 6.4, id: 6 },\r\n];\r\n","import React from \"react\";\r\n\r\nconst Upgrades = ({ upgrades, upgradeBuilding, currency }) => {\r\n  return (\r\n    <>\r\n      {upgrades.map((item) => {\r\n        const { upgrade_name, id, cost, building_to_upgrade, value } = item;\r\n        return (\r\n          <div className=\"upgrade\" key={id}>\r\n            {currency >= cost && (\r\n              <div\r\n                className=\"upgrade_wrap\"\r\n                style={{ border: \"2px solid white\", marginBottom: \"5px\" }}\r\n              >\r\n                <p className=\"u_name\">{upgrade_name}</p>\r\n                <button\r\n                  className=\"u_buy\"\r\n                  onClick={() =>\r\n                    upgradeBuilding(building_to_upgrade, value, id, cost)\r\n                  }\r\n                >\r\n                  Buy cost : {cost.toFixed(2)}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upgrades;\r\n","import React from \"react\";\r\n\r\nconst Prestige = ({ prestige }) => {\r\n  return (\r\n    <div className=\"prestige\">\r\n      <button onClick={prestige}>Prestige</button>\r\n      <small>(icreases clicking power by x2)</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prestige;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Buildings from \"./Buildings\";\nimport svg from \"./ClickArea.svg\";\nimport { buildings, upgrades } from \"./data\";\nimport Upgrades from \"./Upgrades\";\nimport Prestige from \"./Prestige\";\nfunction App() {\n  const [currency, setCurrency] = useState(0);\n  const [per_second, setPerSecond] = useState(0);\n  const [per_click, setPerClick] = useState(1);\n  const [prestige_power, setPrestigePower] = useState(1);\n  const [amount_to_prestige, setAmountToPrestige] = useState(50);\n  const [about_to_prestige, setAboutToPrestige] = useState(false);\n  const [building_array, setBuildingArray] = useState(buildings);\n  const [upgrades_array, setUpgradesArray] = useState(upgrades);\n  const getLocalStorage = () => {\n    const data = JSON.parse(localStorage.getItem(\"Game Data\"));\n    if (data) {\n      setCurrency(data.currency);\n      setPerSecond(data.per_second);\n      setBuildingArray(data.building_array);\n      setUpgradesArray(data.upgrades_array);\n      setPrestigePower(data.prestige_power);\n      setPerClick(data.per_click);\n      setAmountToPrestige(data.amount_to_prestige);\n    }\n  };\n  useEffect(() => {\n    getLocalStorage();\n  }, []);\n  const buyBuilding = (id, cost) => {\n    setBuildingArray(\n      building_array.map((building) => {\n        const { amount, cost } = building;\n        if (building.id === id) {\n          const updatedAmount = amount + 1;\n          const updatedCost = cost * 1.5;\n          return {\n            ...building,\n            amount: updatedAmount,\n            cost: updatedCost,\n          };\n        } else {\n          return building;\n        }\n      })\n    );\n    setCurrency(currency - cost);\n  };\n  const upgradeBuilding = (name, value, id, cost) => {\n    setBuildingArray(\n      building_array.map((building) => {\n        const { per_second } = building;\n        if (building.name === name) {\n          const updatedPerSecond = per_second * value;\n          return {\n            ...building,\n            per_second: updatedPerSecond,\n          };\n        } else {\n          return building;\n        }\n      })\n    );\n    const updatedUpgradesArray = upgrades_array.filter(\n      (item) => item.id !== id\n    );\n    setCurrency(currency - cost);\n    setUpgradesArray(updatedUpgradesArray);\n  };\n  const prestige = () => {\n    setCurrency(0);\n    setPrestigePower(prestige_power * 2);\n    setAmountToPrestige(amount_to_prestige * 10);\n    setAboutToPrestige(!about_to_prestige);\n  };\n  const updatePerSecond = () => {\n    const per_s = building_array.reduce((acc, cur) => {\n      return acc + cur.amount * cur.per_second;\n    }, 0);\n    setPerSecond(per_s);\n  };\n  useEffect(() => {\n    updatePerSecond();\n  }, [building_array]);\n  const saveData = () => {\n    const game_data = {\n      currency,\n      per_second,\n      per_click,\n      prestige_power,\n      building_array,\n      upgrades_array,\n      amount_to_prestige,\n    };\n    localStorage.setItem(\"Game Data\", JSON.stringify(game_data));\n  };\n  useEffect(() => {\n    saveData();\n  }, [per_second, about_to_prestige]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrency((prev) => {\n        return prev + per_second;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [per_second]);\n  return (\n    <div className=\"container\">\n      <div className=\"click_area_bg click_this\">\n        <img\n          src={svg}\n          alt=\"click_area\"\n          className=\"click_item\"\n          onClick={() => setCurrency(currency + per_click * prestige_power)}\n        />\n      </div>\n\n      <div className=\"counter\">\n        <p className=\"currency\">Currency: {currency.toFixed(2)}</p>\n        <span className=\"currency_per_second\">\n          Per second: {per_second.toFixed(2)} /s\n        </span>\n      </div>\n      <div className=\"buildings\">\n        <h2>Your Buildings</h2>\n        <Buildings\n          items={building_array}\n          currency={currency}\n          buyBuilding={buyBuilding}\n        />\n      </div>\n      <div className=\"upgrades\">\n        <h2>Upgrades</h2>\n        <Upgrades\n          upgrades={upgrades_array}\n          upgradeBuilding={upgradeBuilding}\n          currency={currency}\n        />\n      </div>\n      {currency >= amount_to_prestige && <Prestige prestige={prestige} />}\n      <div className=\"tip\">\n        Game data saves to local storage each time you buy the building\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}